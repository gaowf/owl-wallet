<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.turing.wallet.mapper.WalletChainMapper">
  <resultMap id="BaseResultMap" type="com.turing.wallet.model.WalletChain">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="tag_type" jdbcType="INTEGER" property="tagType" />
    <result column="tag_address" jdbcType="VARCHAR" property="tagAddress" />
    <result column="icon_address" jdbcType="VARCHAR" property="iconAddress" />
    <result column="chain_protocol" jdbcType="VARCHAR" property="chainProtocol" />
    <result column="chain_browser_address" jdbcType="VARCHAR" property="chainBrowserAddress" />
    <result column="chain_browser_tx" jdbcType="VARCHAR" property="chainBrowserTx" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="reg_ex" jdbcType="VARCHAR" property="regEx" />
    <result column="show_name" jdbcType="VARCHAR" property="showName" />
    <result column="default_show" jdbcType="INTEGER" property="defaultShow" />
    <result column="evm_state" jdbcType="BIT" property="evmState" />
    <result column="created_at" jdbcType="BIGINT" property="createdAt" />
    <result column="updated_at" jdbcType="BIGINT" property="updatedAt" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, name, tag_type, tag_address, icon_address, chain_protocol, chain_browser_address, 
    chain_browser_tx, state, reg_ex, show_name, default_show, evm_state, created_at, 
    updated_at
  </sql>
  <select id="selectByExample" parameterType="com.turing.wallet.model.WalletChainExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from wallet_chain
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from wallet_chain
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from wallet_chain
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.turing.wallet.model.WalletChainExample">
    delete from wallet_chain
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.turing.wallet.model.WalletChain" useGeneratedKeys="true">
    insert into wallet_chain (name, tag_type, tag_address, 
      icon_address, chain_protocol, chain_browser_address, 
      chain_browser_tx, state, reg_ex, 
      show_name, default_show, evm_state, 
      created_at, updated_at)
    values (#{name,jdbcType=VARCHAR}, #{tagType,jdbcType=INTEGER}, #{tagAddress,jdbcType=VARCHAR}, 
      #{iconAddress,jdbcType=VARCHAR}, #{chainProtocol,jdbcType=VARCHAR}, #{chainBrowserAddress,jdbcType=VARCHAR}, 
      #{chainBrowserTx,jdbcType=VARCHAR}, #{state,jdbcType=INTEGER}, #{regEx,jdbcType=VARCHAR}, 
      #{showName,jdbcType=VARCHAR}, #{defaultShow,jdbcType=INTEGER}, #{evmState,jdbcType=BIT}, 
      #{createdAt,jdbcType=BIGINT}, #{updatedAt,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.turing.wallet.model.WalletChain" useGeneratedKeys="true">
    insert into wallet_chain
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="name != null">
        name,
      </if>
      <if test="tagType != null">
        tag_type,
      </if>
      <if test="tagAddress != null">
        tag_address,
      </if>
      <if test="iconAddress != null">
        icon_address,
      </if>
      <if test="chainProtocol != null">
        chain_protocol,
      </if>
      <if test="chainBrowserAddress != null">
        chain_browser_address,
      </if>
      <if test="chainBrowserTx != null">
        chain_browser_tx,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="regEx != null">
        reg_ex,
      </if>
      <if test="showName != null">
        show_name,
      </if>
      <if test="defaultShow != null">
        default_show,
      </if>
      <if test="evmState != null">
        evm_state,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
      <if test="updatedAt != null">
        updated_at,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="tagType != null">
        #{tagType,jdbcType=INTEGER},
      </if>
      <if test="tagAddress != null">
        #{tagAddress,jdbcType=VARCHAR},
      </if>
      <if test="iconAddress != null">
        #{iconAddress,jdbcType=VARCHAR},
      </if>
      <if test="chainProtocol != null">
        #{chainProtocol,jdbcType=VARCHAR},
      </if>
      <if test="chainBrowserAddress != null">
        #{chainBrowserAddress,jdbcType=VARCHAR},
      </if>
      <if test="chainBrowserTx != null">
        #{chainBrowserTx,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
      <if test="regEx != null">
        #{regEx,jdbcType=VARCHAR},
      </if>
      <if test="showName != null">
        #{showName,jdbcType=VARCHAR},
      </if>
      <if test="defaultShow != null">
        #{defaultShow,jdbcType=INTEGER},
      </if>
      <if test="evmState != null">
        #{evmState,jdbcType=BIT},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=BIGINT},
      </if>
      <if test="updatedAt != null">
        #{updatedAt,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.turing.wallet.model.WalletChainExample" resultType="java.lang.Long">
    select count(*) from wallet_chain
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update wallet_chain
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.tagType != null">
        tag_type = #{record.tagType,jdbcType=INTEGER},
      </if>
      <if test="record.tagAddress != null">
        tag_address = #{record.tagAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.iconAddress != null">
        icon_address = #{record.iconAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.chainProtocol != null">
        chain_protocol = #{record.chainProtocol,jdbcType=VARCHAR},
      </if>
      <if test="record.chainBrowserAddress != null">
        chain_browser_address = #{record.chainBrowserAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.chainBrowserTx != null">
        chain_browser_tx = #{record.chainBrowserTx,jdbcType=VARCHAR},
      </if>
      <if test="record.state != null">
        state = #{record.state,jdbcType=INTEGER},
      </if>
      <if test="record.regEx != null">
        reg_ex = #{record.regEx,jdbcType=VARCHAR},
      </if>
      <if test="record.showName != null">
        show_name = #{record.showName,jdbcType=VARCHAR},
      </if>
      <if test="record.defaultShow != null">
        default_show = #{record.defaultShow,jdbcType=INTEGER},
      </if>
      <if test="record.evmState != null">
        evm_state = #{record.evmState,jdbcType=BIT},
      </if>
      <if test="record.createdAt != null">
        created_at = #{record.createdAt,jdbcType=BIGINT},
      </if>
      <if test="record.updatedAt != null">
        updated_at = #{record.updatedAt,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update wallet_chain
    set id = #{record.id,jdbcType=BIGINT},
      name = #{record.name,jdbcType=VARCHAR},
      tag_type = #{record.tagType,jdbcType=INTEGER},
      tag_address = #{record.tagAddress,jdbcType=VARCHAR},
      icon_address = #{record.iconAddress,jdbcType=VARCHAR},
      chain_protocol = #{record.chainProtocol,jdbcType=VARCHAR},
      chain_browser_address = #{record.chainBrowserAddress,jdbcType=VARCHAR},
      chain_browser_tx = #{record.chainBrowserTx,jdbcType=VARCHAR},
      state = #{record.state,jdbcType=INTEGER},
      reg_ex = #{record.regEx,jdbcType=VARCHAR},
      show_name = #{record.showName,jdbcType=VARCHAR},
      default_show = #{record.defaultShow,jdbcType=INTEGER},
      evm_state = #{record.evmState,jdbcType=BIT},
      created_at = #{record.createdAt,jdbcType=BIGINT},
      updated_at = #{record.updatedAt,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.turing.wallet.model.WalletChain">
    update wallet_chain
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="tagType != null">
        tag_type = #{tagType,jdbcType=INTEGER},
      </if>
      <if test="tagAddress != null">
        tag_address = #{tagAddress,jdbcType=VARCHAR},
      </if>
      <if test="iconAddress != null">
        icon_address = #{iconAddress,jdbcType=VARCHAR},
      </if>
      <if test="chainProtocol != null">
        chain_protocol = #{chainProtocol,jdbcType=VARCHAR},
      </if>
      <if test="chainBrowserAddress != null">
        chain_browser_address = #{chainBrowserAddress,jdbcType=VARCHAR},
      </if>
      <if test="chainBrowserTx != null">
        chain_browser_tx = #{chainBrowserTx,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="regEx != null">
        reg_ex = #{regEx,jdbcType=VARCHAR},
      </if>
      <if test="showName != null">
        show_name = #{showName,jdbcType=VARCHAR},
      </if>
      <if test="defaultShow != null">
        default_show = #{defaultShow,jdbcType=INTEGER},
      </if>
      <if test="evmState != null">
        evm_state = #{evmState,jdbcType=BIT},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=BIGINT},
      </if>
      <if test="updatedAt != null">
        updated_at = #{updatedAt,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.turing.wallet.model.WalletChain">
    update wallet_chain
    set name = #{name,jdbcType=VARCHAR},
      tag_type = #{tagType,jdbcType=INTEGER},
      tag_address = #{tagAddress,jdbcType=VARCHAR},
      icon_address = #{iconAddress,jdbcType=VARCHAR},
      chain_protocol = #{chainProtocol,jdbcType=VARCHAR},
      chain_browser_address = #{chainBrowserAddress,jdbcType=VARCHAR},
      chain_browser_tx = #{chainBrowserTx,jdbcType=VARCHAR},
      state = #{state,jdbcType=INTEGER},
      reg_ex = #{regEx,jdbcType=VARCHAR},
      show_name = #{showName,jdbcType=VARCHAR},
      default_show = #{defaultShow,jdbcType=INTEGER},
      evm_state = #{evmState,jdbcType=BIT},
      created_at = #{createdAt,jdbcType=BIGINT},
      updated_at = #{updatedAt,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>